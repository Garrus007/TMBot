<UserControl x:Class="TMBot.Tabs.TradesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TMBot.Tabs"
             xmlns:views="clr-namespace:TMBot.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:validation="clr-namespace:TMBot.Utilities.MVVM.Validation"
             mc:Ignorable="d" 
             d:DesignHeight="480" d:DesignWidth="640"
             Background="White">
    
    <DockPanel>

        <Grid DockPanel.Dock="Top" Margin="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <views:AsyncButton
            Grid.Column ="0" 
            Command="{Binding ToggleCommand}">

                <views:AsyncButton.Resources>
                    <Style TargetType="{x:Type views:AsyncButton}" BasedOn="{StaticResource {x:Type views:AsyncButton}}">
                        <Setter Property="Content" Value="Запустить"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Worker.IsRunning}" Value="True">
                                <Setter Property="Content" Value="Остановить"/>
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>
                </views:AsyncButton.Resources>

            </views:AsyncButton>

            <StackPanel Grid.Row="0" Grid.Column="1">
                <TextBlock HorizontalAlignment="Center">Статус</TextBlock>
                <Label
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   FontSize="20">
                    <Label.Resources>
                        <Style  TargetType="{x:Type Label}">
                            <Setter Property="Foreground" Value="Red"/>
                            <Setter Property="Content" Value="Не работает"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Worker.IsRunning}"
                                         Value="True">
                                    <Setter Property="Foreground" Value="Green"/>
                                    <Setter Property="Content" Value="Работает"/>
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Label.Resources>
                </Label>
            </StackPanel>

            <StackPanel Grid.Row="0" Grid.Column="2">
                <TextBlock TextWrapping="Wrap">
                    Максимальная разница
                </TextBlock>
                <xctk:DecimalUpDown Minimum="0" Increment="0.01" FormatString="P0"
                                           Value="{Binding Worker.PriceThreshold}"/>
            </StackPanel>

        </Grid>

        <GroupBox Header="Трейды"
                  DockPanel.Dock="Bottom">
            <DataGrid
                     ItemsSource="{Binding Worker.Items}"
                     IsSynchronizedWithCurrentItem="True"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserReorderColumns="False"
                      DataContext="{Binding }">

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Изображение" IsReadOnly="True" MinWidth="100" MaxWidth="100" CellStyle="{StaticResource ItemImageCell}"/>
                    <DataGridTemplateColumn Header="Название"  IsReadOnly="True" CellStyle="{StaticResource ItemNameCell}"/>
                    <DataGridTextColumn Header="Цена ТМ" IsReadOnly="True" Binding="{Binding TMPrice, Converter={StaticResource KopekToRubleConverter}}"/>
                    <DataGridTextColumn Header="Моя цена" IsReadOnly="True" Binding="{Binding MyPrice, Converter={StaticResource KopekToRubleConverter}}"/>
                    
                    <DataGridTextColumn>
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.PriceLimitName, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                        <DataGridTextColumn.Binding>
                            <Binding Path="PriceLimit" Converter="{StaticResource KopekToRubleConverter}">
                                <Binding.ValidationRules>
                                    <validation:DecimalValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    

                    <DataGridTextColumn Header="Максимальное количество">
                        <DataGridTextColumn.Binding>
                            <Binding Path="CountLimit" Converter="{StaticResource CountConverter}">
                                <Binding.ValidationRules>
                                    <validation:IntValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>

                </DataGrid.Columns>

            </DataGrid>
        </GroupBox>
    </DockPanel>
</UserControl>
