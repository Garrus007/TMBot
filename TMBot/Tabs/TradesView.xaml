<UserControl x:Class="TMBot.Tabs.TradesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TMBot.Tabs"
             xmlns:views="clr-namespace:TMBot.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="480" d:DesignWidth="640"
             Background="White">
    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
       <Grid.ColumnDefinitions>
           <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <views:AsyncButton
            Grid.Column ="0" 
            Command="{Binding ToggleCommand}">
            
            <views:AsyncButton.Resources>
                <Style TargetType="{x:Type views:AsyncButton}" BasedOn="{StaticResource {x:Type views:AsyncButton}}">
                    <Setter Property="Content" Value="Запустить"/>
                    
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SellWorker.IsRunning}" Value="True">
                            <Setter Property="Content" Value="Остановить"/>
                        </DataTrigger>
                    </Style.Triggers>

                </Style>
            </views:AsyncButton.Resources>
            
        </views:AsyncButton>

        <StackPanel Grid.Row="0" Grid.Column="1">
            <TextBlock HorizontalAlignment="Center">Статус</TextBlock>
            <Label
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   FontSize="20">
                <Label.Resources>
                    <Style  TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="Red"/>
                        <Setter Property="Content" Value="Не работает"/>
                        
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SellWorker.IsRunning}"
                                         Value="True">
                                <Setter Property="Foreground" Value="Green"/>
                                <Setter Property="Content" Value="Работает"/>
                            </DataTrigger>
                        </Style.Triggers>
                        
                    </Style>
                </Label.Resources>
            </Label>
        </StackPanel>
        
        <StackPanel Grid.Row="0" Grid.Column="2">
            <TextBlock TextWrapping="Wrap">
                Не поднимать цену, если следующая цена отличается меньше, чем на
            </TextBlock>
            <xctk:DecimalUpDown Minimum="0" Increment="0.01" FormatString="P0"
                                           Value="{Binding Path=OffsetPercentage}"/>
        </StackPanel>
        
        
            
        <GroupBox Header="Трейды"
                  Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3">
            <DataGrid
                     ItemsSource="{Binding SellWorker.Trades}"
                     IsSynchronizedWithCurrentItem="True"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserReorderColumns="False"
                      SelectedIndex="{Binding SellWorker.LastUpdateItemIndex}">
                
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Изображение" IsReadOnly="True" MinWidth="100" MaxWidth="100" CellStyle="{StaticResource ItemImageCell}"/>
                    <DataGridTemplateColumn Header="Название"  IsReadOnly="True" CellStyle="{StaticResource ItemNameCell}"/>
                    <DataGridTextColumn Header="Цена ТМ" IsReadOnly="True" Binding="{Binding TMPrice, Converter={StaticResource KopekToRubleConverter}}"/>
                    <DataGridTextColumn Header="Моя цена" IsReadOnly="True" Binding="{Binding MyPrice, Converter={StaticResource KopekToRubleConverter}}"/>
                    <DataGridTextColumn Header="Минимальная цена"  Binding="{Binding PriceLimit, Converter={StaticResource KopekToRubleConverter}}"/>
                </DataGrid.Columns>
            
            </DataGrid>
        </GroupBox>
    </Grid>
</UserControl>
