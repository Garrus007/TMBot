<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TMBot"
                    xmlns:views="clr-namespace:TMBot.Views"
                    xmlns:converters="clr-namespace:TMBot.Utilities.MVVM.Converters" xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls">

    <Style TargetType="{x:Type views:AsyncButton}" BasedOn="{StaticResource {x:Type Button}}">

        <Style.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>

            <Storyboard x:Key="WaitStoryboard">
                <DoubleAnimation
                Storyboard.TargetName="Wait"
                Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                From="0"
                To="360"
                Duration="0:0:2"
                RepeatBehavior="Forever" />
            </Storyboard>

        </Style.Resources>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="26"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="contentPresenter"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Grid.Column="0" Grid.ColumnSpan="2"/>

                            <StackPanel Grid.Column="1"
                                        Visibility="{Binding Command.Execution, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}}"
                                        VerticalAlignment="Center">
                                <views:Spinner Grid.Column="1" Visibility="{Binding Command.Execution.IsNotCompleted, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </StackPanel>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FlatButtonPressedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

</ResourceDictionary>